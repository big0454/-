import re
import asyncio
import requests
from telethon import TelegramClient, events

# üîπ ‡πÉ‡∏™‡πà API ID ‡πÅ‡∏•‡∏∞ API HASH
API_ID = 29316101
API_HASH = "81d03af65c3d3a442f38559d3967e28c"
PHONE_NUMBERS = [
    "0951417365", "0959694413", "0829196672", "0659599070"
]
NOTIFY_GROUP_ID = -1002405260670  # ‡πÉ‡∏™‡πà Group ID ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô

# üîπ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ã‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢‡πÉ‡∏ä‡πâ‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß
used_links = set()

# üîπ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Telegram
client = TelegramClient("truemoney_bot", API_ID, API_HASH)

# üîπ ‡∏î‡∏±‡∏Å‡∏à‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ã‡∏≠‡∏á
@client.on(events.NewMessage)
async def handler(event):
    message = event.message.message
    link_pattern = r"https://gift\.truemoney\.com/campaign[^\s]*v=([\w\d]+)"
    match = re.search(link_pattern, message)

    if match:
        angpao_code = match.group(1)

        if angpao_code in used_links:
            print(f"üö´ ‡∏ã‡∏≠‡∏á‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß: {angpao_code}")
            return  # ‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏£‡∏±‡∏ö‡∏ã‡πâ‡∏≥

        used_links.add(angpao_code)
        print(f"üéÅ ‡∏û‡∏ö‡∏ã‡∏≠‡∏á: {angpao_code}")

        # üîπ ‡∏•‡∏≠‡∏á‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å‡πÄ‡∏ö‡∏≠‡∏£‡πå
        for phone in PHONE_NUMBERS:
            success, amount = claim_angpao(angpao_code, phone)
            if success:
                await notify_success(phone, angpao_code, amount)
            else:
                await notify_fail(phone, angpao_code)

# üîπ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡∏ã‡∏≠‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á API
def claim_angpao(code, phone):
    url = f"https://store.cyber-safe.pro/api/topup/truemoney/angpaofree/{code}/{phone}"
    try:
        response = requests.get(url, timeout=10)
        data = response.json()
        
        if data.get("status", {}).get("message", "").lower() == "success":
            tickets = data.get("data", {}).get("tickets", [])
            amount_total = sum(float(ticket["amount_baht"]) for ticket in tickets if ticket["mobile"].replace("-", "") == phone)
            return True, amount_total
    except Exception as e:
        print(f"‚ö†Ô∏è ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")

    return False, 0.00

# üîπ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
async def notify_success(phone, code, amount):
    message = f"‚úÖ ‡πÄ‡∏ö‡∏≠‡∏£‡πå {phone} ‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô {amount:.2f} ‡∏ö‡∏≤‡∏ó ‡∏à‡∏≤‡∏Å‡∏ã‡∏≠‡∏á {code} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!"
    await client.send_message(NOTIFY_GROUP_ID, message)
    print(message)

# üîπ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
async def notify_fail(phone, code):
    message = f"‚ùå ‡πÄ‡∏ö‡∏≠‡∏£‡πå {phone} ‡∏£‡∏±‡∏ö‡∏ã‡∏≠‡∏á {code} ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!"
    await client.send_message(NOTIFY_GROUP_ID, message)
    print(message)

# üîπ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏£‡∏±‡∏ô‡∏ö‡∏≠‡∏ó
async def main():
    print("üöÄ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏±‡∏ô‡∏ö‡∏≠‡∏ó...")
    await client.start()
    print("‚úÖ ‡∏ö‡∏≠‡∏ó‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
    await client.run_until_disconnected()

asyncio.run(main())
