import re
import asyncio
import requests
from telethon import TelegramClient, events

# ‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ API Telegram
API_ID = 29316101
API_HASH = "81d03af65c3d3a442f38559d3967e28c"
PHONE_NUMBERS = ["0951417365", "0959694413", "0829196672", "0659599070"]
NOTIFY_GROUP_ID = -1002405260670

# üìå ‡πÄ‡∏Å‡πá‡∏ö‡∏ã‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢‡πÉ‡∏ä‡πâ (‡∏Å‡∏±‡∏ô‡∏£‡∏±‡∏ö‡∏ã‡πâ‡∏≥)
used_links = set()

# ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Telegram Client
client = TelegramClient("truemoney_bot", API_ID, API_HASH)

@client.on(events.NewMessage)
async def handler(event):
    message = event.message.message
    print(f"üì© ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö: {message}")

    # üîπ ‡∏à‡∏±‡∏ö‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ã‡∏≠‡∏á (‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏∏‡∏Å‡∏Å‡∏£‡∏ì‡∏µ)
    link_pattern = r"https?://gift\.truemoney\.com/campaign/\?v=[\w\d]+"
    matches = re.findall(link_pattern, message)

    if matches:
        for angpao_link in matches:
            angpao_code = angpao_link.split("v=")[-1]

            # üö´ ‡∏Å‡∏±‡∏ô‡∏ã‡∏≠‡∏á‡∏ã‡πâ‡∏≥
            if angpao_code in used_links:
                print(f"‚è≥ ‡∏ã‡∏≠‡∏á‡∏ô‡∏µ‡πâ‡∏£‡∏±‡∏ö‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß: {angpao_code}")
                continue

            used_links.add(angpao_code)
            print(f"üéÅ ‡∏û‡∏ö‡∏ã‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà: {angpao_code}")

            for phone in PHONE_NUMBERS:
                success, amount = claim_angpao(angpao_code, phone)
                if success:
                    await notify_success(phone, angpao_code, amount)
                else:
                    await notify_fail(phone, angpao_code)

def claim_angpao(code, phone):
    """ ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏£‡∏±‡∏ö‡∏ã‡∏≠‡∏á‡∏≠‡∏±‡πà‡∏á‡πÄ‡∏õ‡∏≤ ‡πÅ‡∏•‡∏∞‡∏î‡∏∂‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö """
    url = f"https://store.cyber-safe.pro/api/topup/truemoney/angpaofree/{code}/{phone}"
    try:
        response = requests.get(url, timeout=10)
        data = response.json()

        if data.get("status", {}).get("message", "").lower() == "success":
            tickets = data.get("data", {}).get("tickets", [])
            amount_total = sum(float(ticket["amount_baht"]) for ticket in tickets if ticket["mobile"].replace("-", "") == phone)
            return True, amount_total
    except Exception as e:
        print(f"‚ö†Ô∏è Error: {e}")

    return False, 0.00

async def notify_success(phone, code, amount):
    """ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à """
    message = f"‚úÖ ‡πÄ‡∏ö‡∏≠‡∏£‡πå {phone} ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö {amount:.2f} ‡∏ö‡∏≤‡∏ó ‡∏à‡∏≤‡∏Å‡∏ã‡∏≠‡∏á {code}!"
    await client.send_message(NOTIFY_GROUP_ID, message)
    print(message)

async def notify_fail(phone, code):
    """ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à """
    message = f"‚ùå ‡πÄ‡∏ö‡∏≠‡∏£‡πå {phone} ‡∏£‡∏±‡∏ö‡∏ã‡∏≠‡∏á {code} ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!"
    await client.send_message(NOTIFY_GROUP_ID, message)
    print(message)

async def main():
    """ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏£‡∏±‡∏ô‡∏ö‡∏≠‡∏ó """
    print("üöÄ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏±‡∏ô‡∏ö‡∏≠‡∏ó...")
    await client.start()
    print("‚úÖ ‡∏ö‡∏≠‡∏ó‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
    await client.run_until_disconnected()

# ‚úÖ ‡πÉ‡∏ä‡πâ asyncio.run() ‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
if __name__ == "__main__":
    asyncio.run(main())
