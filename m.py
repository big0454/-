# -*- coding: utf-8 -*-
import asyncio
import re
import json
import requests
from telethon import TelegramClient, events

# üîπ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ API ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Telegram
api_id = 29316101
api_hash = "81d03af65c3d3a442f38559d3967e28c"

# üîπ ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏£‡∏±‡∏ö‡∏ã‡∏≠‡∏á
phone_numbers = [
    "0951417365",
    "0959694413",
    "0829196672",
    "0659599070"
]

# üîπ ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
notify_group_id = -1002405260670

# üîπ URL API ‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏ã‡∏≠‡∏á
topup_api_url = "https://store.cyber-safe.pro/api/topup/truemoney/angpaofree/{}/{}"

# ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Client ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Telegram
client = TelegramClient("my_telegram_session", api_id, api_hash)

# üîç ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡∏à‡∏≤‡∏Å‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ã‡∏≠‡∏á
def extract_angpao_code(text):
    match = re.search(r"https://gift\.truemoney\.com/campaign\?v=([a-zA-Z0-9]+)", text)
    if match:
        return match.group(1)
    return None

# üì• ‡∏î‡∏±‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ã‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£
@client.on(events.NewMessage)
async def handler(event):
    message = event.message.message

    # üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏´‡∏≤‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ã‡∏≠‡∏á
    angpao_code = extract_angpao_code(message)
    if angpao_code:
        print(f"üîç ‡∏û‡∏ö‡∏ã‡∏≠‡∏á: {angpao_code}")
        
        success_numbers = []
        failed_numbers = []

        # üîÑ ‡∏•‡∏≠‡∏á‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏ã‡∏≠‡∏á‡πÉ‡∏´‡πâ‡∏ó‡∏∏‡∏Å‡πÄ‡∏ö‡∏≠‡∏£‡πå
        for phone in phone_numbers:
            try:
                url = topup_api_url.format(angpao_code, phone)
                response = requests.get(url)
                data = response.json()

                if data.get("status", {}).get("code") == "SUCCESS":
                    amount = data.get("data", {}).get("voucher", {}).get("amount_baht", "0.00")
                    success_numbers.append((phone, amount))
                    print(f"‚úÖ ‡πÄ‡∏ö‡∏≠‡∏£‡πå {phone} ‡∏£‡∏±‡∏ö‡∏ã‡∏≠‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ({amount} ‡∏ö‡∏≤‡∏ó)")
                else:
                    failed_numbers.append(phone)
                    print(f"‚ùå ‡πÄ‡∏ö‡∏≠‡∏£‡πå {phone} ‡∏£‡∏±‡∏ö‡∏ã‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
            
            except Exception as e:
                print(f"‚ö†Ô∏è ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Å‡∏±‡∏ö‡πÄ‡∏ö‡∏≠‡∏£‡πå {phone}: {str(e)}")
                failed_numbers.append(phone)

        # üì¢ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°
        msg = f"üéÅ ‡∏ã‡∏≠‡∏á: `{angpao_code}`\n"
        if success_numbers:
            msg += "‚úÖ ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:\n" + "\n".join([f"- {p[0]} ({p[1]} ‡∏ö‡∏≤‡∏ó)" for p in success_numbers]) + "\n"
        if failed_numbers:
            msg += "‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:\n" + "\n".join([f"- {p}" for p in failed_numbers]) + "\n"
        
        await client.send_message(notify_group_id, msg)

# üöÄ ‡∏£‡∏±‡∏ô‡∏ö‡∏≠‡∏ó
async def main():
    await client.start()
    print("‚úÖ ‡∏ö‡∏≠‡∏ó‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß!")
    await client.run_until_disconnected()

with client:
    client.loop.run_until_complete(main())
