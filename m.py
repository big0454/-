import asyncio
from telethon import TelegramClient, events
import re
import aiohttp

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ö‡∏±‡∏ç‡∏ä‡∏µ Telegram
API_ID = 29316101
API_HASH = "81d03af65c3d3a442f38559d3967e28c"
SESSION_NAME = "my_telegram_session"

# ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÄ‡∏ï‡∏¥‡∏°‡∏ã‡∏≠‡∏á
PHONE_NUMBERS = ["0951417365", "0829196672", "0659599070", "0959694413"]

# ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
GROUP_NOTIFY_ID = -1002405260670  

# URL API ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô
API_URL = "https://store.cyber-safe.pro/api/topup/truemoney/angpaofree/{code}/{phone}"

# ‡∏™‡∏£‡πâ‡∏≤‡∏á Telegram Client
client = TelegramClient(SESSION_NAME, API_ID, API_HASH)

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏±‡∏Å‡∏à‡∏±‡∏ö‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ã‡∏≠‡∏á‡∏ó‡∏∏‡∏Å‡πÅ‡∏ö‡∏ö
def extract_angpao_links(text):
    return re.findall(r"https?://gift\.truemoney\.com/campaign/\??v=([a-zA-Z0-9]+)", text)

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏ï‡∏¥‡∏°‡∏ã‡∏≠‡∏á‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô
async def fetch_angpao(session, code, phone):
    url = API_URL.format(code=code, phone=phone)
    try:
        async with session.get(url) as response:
            data = await response.json()
            status = data.get("status", {}).get("message", "").lower()
            amount = data.get("data", {}).get("my_ticket", {}).get("amount_baht", "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏")
            return phone, amount if "success" in status else None
    except Exception as e:
        print(f"‚ùå Error with {phone}: {e}")
        return phone, None

# ‡∏î‡∏±‡∏Å‡∏à‡∏±‡∏ö‡∏ó‡∏∏‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ã‡∏≠‡∏á
@client.on(events.NewMessage)
async def handler(event):
    message_text = event.raw_text  # ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏≠‡∏á‡πÄ‡∏´‡πá‡∏ô
    found_links = extract_angpao_links(message_text)  # ‡∏î‡∏∂‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°

    # ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ó‡∏µ‡πà‡∏ã‡πà‡∏≠‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° (inline link)
    if event.message.entities:
        for entity in event.message.entities:
            if isinstance(entity, events.message.MessageEntityTextUrl):
                url = entity.url
                found_links += extract_angpao_links(url)

    if found_links:
        print(f"üîç ‡∏û‡∏ö‡∏ã‡∏≠‡∏á: {found_links}")  

        async with aiohttp.ClientSession() as session:
            for code in found_links:
                tasks = [fetch_angpao(session, code, phone) for phone in PHONE_NUMBERS]
                results = await asyncio.gather(*tasks)

                success_list = [f"{phone} ({amount} ‡∏ö‡∏≤‡∏ó)" for phone, amount in results if amount]
                failed_list = [phone for phone, amount in results if not amount]

                # ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏Å‡∏•‡∏∏‡πà‡∏°
                status_message = f"üßß **‡∏ã‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö:** https://gift.truemoney.com/campaign?v={code}\n\n"
                if success_list:
                    status_message += f"‚úÖ **‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:**\n" + "\n".join(success_list) + "\n\n"
                if failed_list:
                    status_message += f"‚ùå **‡πÄ‡∏ï‡∏¥‡∏°‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:** {', '.join(failed_list)}"

                await client.send_message(GROUP_NOTIFY_ID, status_message)

# ‡∏£‡∏±‡∏ô‡∏ö‡∏≠‡∏ó
async def main():
    await client.start()
    print("üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏±‡∏ô‡∏ö‡∏≠‡∏ó... (‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÅ‡∏ä‡πÅ‡∏ô‡∏•, ‡∏Å‡∏•‡∏∏‡πà‡∏°, ‡πÅ‡∏•‡∏∞‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ã‡πà‡∏≠‡∏ô)")
    await client.run_until_disconnected()

asyncio.run(main())